<?php

namespace Rexume\Lib\Parsers;
use \Rexume\Config;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-10-18 at 02:24:52.
 */
class LinkedInAddressParserTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var LinkedInAddressParser
     */
    protected $object;
    private $mappings;
    private $type = 'Address';
    private $testAddresses;

    private $simpleAddress = <<<EOL
        11 Street Name
        PO Box 11
        City Province P0S7A1
        Country
EOL;
    
    private $simpleAddressWithName = <<<EOL
        Name
        11 Street Name
        PO Box 11
        City Province P0S7A1
        Country
EOL;
    
    private $simpleAddressOneLine = '11 Street Name, City, Province P0S7A1, Country';
        
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->mappings = array(
            new Config\ProtocolBind(".", "street1"),
            new Config\ProtocolBind(".", "street2"),
            new Config\ProtocolBind(".", "city"),
            new Config\ProtocolBind(".", "province"),
            new Config\ProtocolBind(".", "postalCode"),
            new Config\ProtocolBind(".", "country")
        );
        $createTag = function($content){ return '<value>' . $content . '</value>'; };
        $this->testAddresses = array(
            new \SimpleXMLElement($createTag($this->simpleAddress))//,
            //new \SimpleXMLElement($this->simpleAddressWithName),
            //new \SimpleXMLElement($this->simpleAddressOneLine)
        );
        $this->parser = new XMLSimpleParser(null, 'Data');
        $this->object = new LinkedInAddressParser($this->mappings, $this->type);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Rexume\Lib\Parsers\LinkedInAddressParser::parse
     */
    public function testParse() {
        foreach($this->testAddresses as $testAddress){
            $result = $this->object->parse($testAddress, $this->parser);
            //check stuff
            $this->assertEquals("11 Street Name", $result->street1());
            $this->assertEquals("PO Box 11", $result->street2());
            $this->assertEquals("City", $result->city());
            $this->assertEquals("P0S7A1", $result->postalCode());
            $this->assertEquals("Country", $result->country());
            $this->assertEquals("Province", $result->province());
        }
    }

}
